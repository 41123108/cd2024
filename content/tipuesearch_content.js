var tipuesearch = {"pages": [{'title': 'About', 'text': '網頁:  https://41123108.github.io/cd2024/ \n 網誌:\xa0 https://41123108.github.io/cd2024/blog \n 簡報:\xa0 https://41123108.github.io/cd2024/reveal \xa0 \n 倉儲:  https://github.com/41123108/cd2024 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'cmsimde', 'text': "SMap  - SiteMap - 依照階次列出網站的所有頁面. \n EditA  - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本. \n Edit  - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式. \n Config  - Configure Site - 編輯頁面標題與管理者密碼. \n Search  - 動態頁面內容的關鍵字搜尋. \n IUpload  - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小. \n IList  - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案. \n FUpload  - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改. \n FList  - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案. \n Logout  - 登出頁面編輯模式. \n Convert  - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁. \n acp  - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲. \n SStatic  - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容. \n RStatic  - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站. \n 80  - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80. \n \n", 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Replit', 'text': 'https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit ./init_replit \n On Replit: \n .replit: python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n for cmsimde_site (not needed): git submodule update --init --recursive \n for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent \n password generator:\xa0 https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py \xa0 \n \n for IPv6 only Ubuntu: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.com ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p for Replit: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.co #since Replit works for IPv4, therefore no ProxyCommand setting needed #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n', 'tags': '', 'url': 'Replit.html'}, {'title': '暫放資料', 'text': '2.分組 倉儲 \n 3.建立方法\xa0 \n a.利用 此倉儲 作為 Template \n b.新增一個名稱為 cd2024 的倉儲 \n 4.維護方法\xa0 \n \xa0a.利用Codespaces\xa0 \n \xa0b.git add . // git commit // git push 等進行維護 \n \xa0 啟動動態 \n python3 main.py \n', 'tags': '', 'url': '暫放資料.html'}, {'title': '每周進度(網誌)', 'text': '', 'tags': '', 'url': '每周進度(網誌).html'}, {'title': 'Ｗ1', 'text': '1.建立 個人 cd2024倉儲 \n 連結： https://github.com/41123108/cd2024 \n *補充細節(擷取自老師blog)： \n 登入 github.com, 連結到 \xa0 https://github.com/mdecycu/cmsimde_site , 利用此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. \n https://github.com/mdecycu/cmsimde_site \xa0 與 \xa0 https://github.com/mdecycu/cmsite \xa0 的差別為, 目前的 Template 將 cmsimde 當作目錄, 而非 cmsite 中的子模組. \n 上述 建立個人課程 cd2024 倉儲與網站的操作影片 , 建立的網站為： https://github.com/41123108/cd2024 \n 2.加入課程cd2024-Teams \n Team code: p0961sy \n 連結： https://teams.microsoft.com/l/team/19%3AWmR48Le8_pC1F-V1UU4HTMuKE0PUC8eYA4pZsP0Icn81%40thread.tacv2/conversations?groupId=5f487589-fa28-471e-a083-f2ba6141545f&tenantId=e650a2d7-e923-45bb-8fa6-1af5b0f72f09 \n 3.下載可攜套件檔案 \n 下載可攜程式環境: \xa0 portable_2024.7z \xa0 (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB) \n 下載 \xa0 miktex-portable.7z \xa0 (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) \n 4. 從 Replit Account 設定 Connect 連結到 Github使雙方互相信任 \n [ 操作講解影片 ] \n 個人連結成果展示： \n \n 5.靜態更新+推送 \n 將倉儲 import 至 Replit 改版後推回 github \n 步驟：(1)Edit編輯- (2)更新內容- (3)Save儲存- (4)Convert轉靜態- (5)到Rrpit的Git-(6)簡述更新內容+提交-(7)push推到遠端-(8)Confirm確認推送改版 \n (remote遠端) \n \n 6.建立個人網誌 \n 41123108 網誌 ： https://41123108.github.io/cd2024/blog/ \n 7.學習如何編輯/更新網誌(每周更新) \n \n 8.設定 Github 帳號的雙重認證 \n 使用 Authy App認證，在Github帳號下的Setting中以Password and authentication啟用雙重認證,\xa0 說明如何設定 Github 雙重認證 , 其中手機必須先安裝 \xa0 Github Mobile , 也可以使用 \xa0 Authy App \xa0 作為認證套件, 一旦在 Github 帳號下的 Setting 中的 Password and authentication 啟用雙重認證, 最後必須下載對應的 Recovery codes 並存入隨身碟, 而且要寄到個人的電子郵箱. \n', 'tags': '', 'url': 'Ｗ1.html'}, {'title': 'Ｗ2', 'text': '# 加入分組2a-midag2 主要利用 Github Classroom 進行協同分組 經由組長建立各組的Team midag，再讓組員自行加入 群組2a-midag2的GitHub連結：[倉儲連結] [倉儲連結]:https://github.com/mdecd2024/2a-midag2 \n *組長操作(難)： 1.說明甲班第一組組長如何建立 midag1 Team, 並利用 Codespaces 維護 2a-midag1 分組倉儲 [影片網址1]: https://nfuedu-my.sharepoint.com/:v:/r/personal/yen_nfu_edu_tw/Documents/2024/cd2024/video/cd2024_2a_w2_3_%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E5%90%84%E7%B5%84%E7%9A%84%20Team%20midag1%20%E4%B8%A6%E5%88%A9%E7%94%A8%20Codespaces%20%E7%B6%AD%E8%AD%B7%E5%85%A7%E5%AE%B9.mp4?csf=1&web=1&e=GpJvE9&nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJTdHJlYW1XZWJBcHAiLCJyZWZlcnJhbFZpZXciOiJTaGFyZURpYWxvZy1MaW5rIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXcifX0%3D \n /細節說明(擷取自老師blog)： 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. \n 2.學習使用 Replit 管理從 Classroom 取得的分組倉儲 影片說明(不太理解)： * 待各分組的期中報告 Team 與倉儲全部建立就緒後, 則甲班學員後續可配合期末作業名稱 2a2, 由甲班各組組長建立 Team finalag1, finalag2 ....等.(嗯???...) \n # 利用Codespaces維護群組倉儲內容 教學影片： \n # 利用近端可攜系統維護分組網站(待學) 學習使用一二年級所學的維護方式打開 puttty.exe (PuTTY) 操作 影片說明(不太理解)： \n # 乙班-設定網誌 利用 [OBS] 加上廣播系統錄製的-設定個人倉儲中的 Pelican 網誌 \n', 'tags': '', 'url': 'Ｗ2.html'}, {'title': 'Ｗ３', 'text': 'Latex使用\xa0 overleaf \xa0編譯 \n 資料放置雲端： https://drive.google.com/drive/folders/1llY3ZpQ8FmxOC5xEJDWb7dy9a83xrazc?usp=sharing \n \n', 'tags': '', 'url': 'Ｗ３.html'}, {'title': 'Ｗ４', 'text': '', 'tags': '', 'url': 'Ｗ４.html'}, {'title': '翻譯影片', 'text': '挑選一部曾經課堂上傳影片中填上字幕 分組翻譯解析課程影片時長27分 [ 影片連結 ] 影片字幕中整理出逐字稿(雲端空間呈現) [ 逐字稿 ] \n', 'tags': '', 'url': '翻譯影片.html'}, {'title': 'Ｗ5', 'text': '\n \n', 'tags': '', 'url': 'Ｗ5.html'}, {'title': 'Ｗ6', 'text': '\n \n', 'tags': '', 'url': 'Ｗ6.html'}, {'title': 'Ｗ7', 'text': '\n \n', 'tags': '', 'url': 'Ｗ7.html'}, {'title': 'Ｗ8', 'text': '\n \n', 'tags': '', 'url': 'Ｗ8.html'}, {'title': 'Ｗ9(期中)', 'text': 'Latex使用\xa0 overleaf \xa0編譯 \n 資料放置雲端： https://drive.google.com/drive/folders/1llY3ZpQ8FmxOC5xEJDWb7dy9a83xrazc?usp=sharing \n 個人編譯畫面圖示： \n \n 整合至群組： \n \n \n', 'tags': '', 'url': 'Ｗ9(期中).html'}, {'title': 'Ｗ10', 'text': '', 'tags': '', 'url': 'Ｗ10.html'}, {'title': '任務一', 'text': '\n \n', 'tags': '', 'url': '任務一.html'}, {'title': '任務二', 'text': '請下載 [cd2024_ball_balancing_platform_control_ref.7z] 閱讀後請將摘要內容放入個人與分組網誌中. [ cd2024_ball_balancing_platform_control_ref.7z ] ## 論文一：2D Ball Balancer Control using QUARC １內容摘要:這份指南將引導您通過使用QUARC控制2D球平衡器的過程。您將學習如何從頭原理建模、分析和有效控制系統。摘要內容包括實驗的先決條件、系統建模和傳遞函數的獲取，以及實現2D球平衡器的期望控制響應的方法。 ２總結:這份指南旨在教導如何使用QUARC控制2D球平衡器。內容包括先決條件、系統建模、傳遞函數獲取以及實現期望控制響應的方法。通过这份指南，用户将学习如何有效地模拟、分析和控制2D球平衡器系统。 ## 論文二：A real time control system for balancing a ball on a platform with FPGA parallel implementation １內容摘要:這份文件介紹了一個利用PID調節器和FPGA平行實現的實時控制系統，旨在提高在平台上平衡球的準確性。該系統的設計包括開發平衡球在平台上的轉換函數、合成PID調節器以及在FPGA上進行平行計算的實現。通過自然模擬，證實了對平台上球位置調節準確性的提高。這項研究的目的是為了應對當今控制系統面臨的新挑戰，如物聯網、無人駕駛汽車和擁有多個參數的複雜對象。這表明了對於開發、研究和設計具有多個參數的複雜對象的實時控制系統的需求。 ２總結:這份文件介紹了一個新的實時控制系統，利用PID調節器和FPGA平行實現，旨在提高在平台上平衡球的準確性。該系統的設計包括開發轉換函數、合成PID調節器以及在FPGA上進行平行計算。通過自然模擬驗證了對平台上球位置調節準確性的提高。這項研究突顯了對於控制系統在處理物聯網、無人駕駛汽車等新挑戰時的重要性，並強調了實時控制系統對於具有多個參數的複雜對象的開發和研究的價值。 ## 論文三：Ball on the plate balancing control system １內容摘要:這份文件描述了設計一個用於平衡球在平板上的實驗室測試臺。系統利用微控制器和控制算法來追踪球的位置並進行控制。通過電阻式觸摸屏確定物體位置，並透過步進馬達的轉角確定平板傾斜角度。控制系統以100 Hz頻率運行，讀取球的坐標和平台傾角信息。系統目標是將物體帶到觸摸屏中心點並保持在該位置，儘管受到干擾。实驗結果顯示，控制系統成功維持球在觸摸屏中心點。 ２總結:這份文件介紹了一個用於平衡球在平板上的實驗室測試臺，利用微控制器和控制算法來追踪和控制球的位置。系統包括電阻式觸摸屏和步進馬達，以確定物體位置和平板傾斜角度。控制系統旨在將球帶到觸摸屏中心並保持穩定。实驗結果表明，控制系統成功實現了維持球在觸摸屏中心的目標。 ## 論文四Construction and theoretical study of a ball balancing platfor １內容摘要:這份文件探討了一個球平衡平台的構造和理論研究，旨在通過自動控制理論的應用來探討穩定動態系統的局限性。該文件包括了構造球平衡平台的方法、將物理和計算機模擬結果進行比較的結果，以及引入比例-積分-微分控制器來幫助平衡平台上的球並觀察系統穩定性方面的限制。 ２總結:這份文件掔探討了通過自動控制理論來穩定動態系統的限制。研究通過構造球平衡平台，比較物理和計算機模擬結果，並引入比例-積分-微分控制器來平衡球在平台上的運動。研究還探討了在穩定自然不穩定或半穩定系統時的性能限制 ## 論文五：Design and Implementation a Ball Balancing System for Control Theory Course １內容摘要:這個專案旨在設計和實現一個球平衡系統，用於控制理論課程。該系統利用微控制器和控制算法來保持一個球在樑上平衡。通過實時反饋，系統調整樑的角度以最小化誤差，並教導學生有關PID控制。該系統採用了伺服馬達、超聲波感測器和3D打印的PVC塑料樑，並使用MATLAB進行模擬和視覺化。這個項目有助於學生理解控制理論的應用，並提供了一個實用的實驗平台。 ２總結:這個專案設計了一個球平衡系統，旨在教控制理論課程的學生應用PID控制。系統利用微控制器和控制算法來調整樑的角度，以保持球在樑上平衡。通過實時反饋，系統能夠最小化誤差，並提供了一個實用的實驗平台，幫助學生理解控制理論的應用。 ## 論文六：Simulation and Experimental Study of Ball Position Control at Biaxial Platform using State Space Approach １內容摘要:這份文件探討控制理論的實際應用，特別聚焦於在雙軸平台上平衡球的應用。文件中描述了如何利用控制結構在防衛軍事技術、攝影穩定和太空火箭垂直降落等高端應用中使用。研究人員通常如何在應用實踐中探索新的控制理論，控制結構對防衛軍事技術有哪些實際影響，以及文件中描述的基準系統是如何在測試控制結構中使用的。 ２總結:這份文件探討了控制理論在平衡球的應用中的實際應用。通過在雙軸平台上平衡球來研究控制結構的性能，並探討了在防衛軍事技術和高端應用中的潛在應用。文件中還介紹了基準系統的設計和控制結構的比較，以及控制器參數的計算方法。整體而言，這份文件提供了有關控制系統設計和應用的深入設計和比較，並強調了其在不同領域中的潛在應用價值。 \n \n', 'tags': '', 'url': '任務二.html'}, {'title': '任務三', 'text': '\n', 'tags': '', 'url': '任務三.html'}, {'title': 'Ｗ11', 'text': '\n \n', 'tags': '', 'url': 'Ｗ11.html'}, {'title': 'Ｗ12', 'text': '\n \n', 'tags': '', 'url': 'Ｗ12.html'}, {'title': 'Ｗ13', 'text': '\n \n', 'tags': '', 'url': 'Ｗ13.html'}, {'title': 'Ｗ14', 'text': '\n \n', 'tags': '', 'url': 'Ｗ14.html'}, {'title': 'Ｗ15', 'text': '\n \n', 'tags': '', 'url': 'Ｗ15.html'}, {'title': 'Ｗ16', 'text': '# 填寫自評表單 到老師倉儲  https://github.com/mdecycu/cd2024/discussions/18  點選discussions開啟表單 表單 連結: https://forms.gle/hqoW6uv8CgBmeFQ87 \n \n', 'tags': '', 'url': 'Ｗ16.html'}, {'title': 'Ｗ17', 'text': '\n \n', 'tags': '', 'url': 'Ｗ17.html'}, {'title': 'Ｗ18', 'text': '\n \n', 'tags': '', 'url': 'Ｗ18.html'}, {'title': 'Latex', 'text': '*使用\xa0 overleaf \xa0 (翻譯文件放置w3、w9) \n Latex 自行看影片整理出的程式碼： 語法 \\documentclass 大括號： 文章 article 論文 report 書籍 book 簡報 beamer 方掛號（輔助性語法)： 指定文字大小 11pt \\begin 開始語法{document} \\end 結束語法{document} \n \\usepackage{xeCJK} 擴充文字功能 \\setCJKmainfont{Noto Serif CJK TC} 指定中文字型 \n \\section{標題名稱} \\subsection{小標題名稱} \\usepackage擴充功能[margin=2cm]{geometry} 邊界寬度 (top、bottom、left、right、a4paper) \\usepackage{setspace}擴充簡單指令 \\doublespacing 增加兩倍行高 \\onhalfspacing 將行高設為1.5倍 \\setlength{\\parskip}{6pt}增加行高 %文字-註解 \\begin{titlepage}設置封面 *句子分行可用多空一行或\\\\ \\begin{center}水平至中對齊 \\small縮小文字 \\large放大文字 \\usepackage{moresize}文字不夠醒目擴充 \\HUGE 把文字放更大 \\textbf{變粗體文字} \\vspace{2cm}文字上端空2cm間隔 （要注意上面沒有段落在e後面要加*） 加大行距文字\\\\［2cm］ \\vfill 指令後文字設定在最底部 \\usepackage{graphicx} 擴充可插入圖片 \\includegraphics[]{圖檔名稱} 插入圖片 （方掛號內 width=4.5cm 控制大小） 加入註腳： 1.non.\\footnote{註腳內容} 2.\\footnotetex{註腳內容} 並在插入註腳位置輸入\\footnotemark. 增加清單 \\begin{enumerate}  （有加enumerate圓點改數字） \\item 清單文字 \\end{enumerate}［擴充後數字可改其他文字］ 在語法內 \\usepackage{enumerate} 擴充 插入圖表： \\begin{figure} 插入圖表的四個指令 +（h）指定圖表位置 1.\\centering置中於目前頁面 2.第二個標籤指定圖檔名稱（後端加width=7cm指定圖表大小） 3.\\caption{圖表底下的說明文字} 4.\\label{fig:chartl}文章中作為參造的標記 在文章中See figure \\ref{fig:chartl}將該圖的編號插入所在位置 on page \\pageref{fig:chartl}標示圖表的頁數 表格： ~\\begin{table}［h］定位表格位置 \\centering 水平置中 \\begin{tabular}{c|c|c} (C:center置中對齊，l:lafe置左，r置右，| 可加可不加-可用-\\hline替代） 表格內&連結符號區隔，分行\\\\ \\caption 表格標題 \\label 參造引用的標籤 表示數學公式： 1.$公式$在段落 2.新的空行中-（中間很大的圖示公式） 上-\\［ 中-公式 下-\\］ \\sqrt{數字} 根號 \\frac{前分子}{後分子} \\sum_{i=1起始值}^{5結束值} 下標的變數 _i 表達 引用文章： \\usepackage{apacite} 擴充引用文章功能 左上角新增空白文件 副檔名 .bib  網路文章點引用 點BibTex  複製貼上剛才的空白文件 回文章底部 \\pagebreak 新增空白頁 \\bibliography{ref} \\bibliographystyle{apacite} \\cite{引用的文章} 目錄與頁碼： \\section*{摘要} 建立摘要的章節 貼上一段甲文字（？ \\tableofcontent 擷取所有章節的標題自動生成目錄的文字 在參考文件擴充中\\usepackage［notocbib］{apacite}-(目錄不顯示) 在摘要上下\\pagebreak-自成一頁 \\renewcommand\\contentsname{目錄} 重新命名指令，將英文轉中文 \\pagenumbering{roman} 改羅馬文字的頁碼 回原文章 \\pagenumbering{arabic} 改阿拉伯數字頁碼 \\setcounter{page}{1} 將頁碼重設回第一頁 \n 影片連結： https://www.youtube.com/watch?v=mQamBS6uTOc&t=610s \n \n', 'tags': '', 'url': 'Latex.html'}, {'title': 'Codespaces', 'text': 'Codespace指令說明 \n 由於 Github Codespaces 免費帳號目前每月 可以使用 120 core hours , 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. \n 利用 init_replit 指令安裝所需 Python 模組 \n 啟動動態 指令 \n 1. chmod u+x init_replit \n 2. ./init_replit \n 3. python3 main.py \n Push 個人倉儲 指令 \n 1. git add .\xa0 \xa0 \xa0 \n 2. git commit -m " 推的內容 "\xa0 \xa0 \n 3. git push \n Push 小組倉儲 指令 \n 1. chmod u+x init_replit \n 2. ./init_replit \n 3. git submodule \xa0update --init \n 4. cd 自己Github帳號 \n 5. git pull origin main \n 6. cd .. \n 7. git add . \n 8. git commit -m"推的內容" \n 9. git push \n Push 網誌 指令 \n 1. chmod u+x init_replit \n 2. ./init_replit \n 3. ./gen_blog \n 4. git add .\xa0 \xa0 \xa0 \n 5. git commit -m " 推的內容 "\xa0 \xa0 \n 6. git push \n 操作示意圖： \n \n', 'tags': '', 'url': 'Codespaces.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束  \n \n  ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}]};