# pip install pyzmq cbor keyboard
from zmqRemoteApi import RemoteAPIClient
from zmqRemoteApi_IPv6 import RemoteAPIClient
import keyboard
import random
import math

client = RemoteAPIClient('192.168.80.84', 23000)
# client = RemoteAPIClient('2001:288:6004:17:2023:cda:4:6', 23000)

print('Program started')
sim = client.getObject('sim')
sim.startSimulation()  # 確保模擬已經啟動
print('Simulation started')

v = 8
a = 40

# 選擇控制的球員
player = '/body'

def setVelocity(lfwV, rfwV, lbwV, rbwV):
    leftMotor1 = sim.getObject(player + '/car_joint_fl')
    rightMotor1 = sim.getObject(player + '/car_joint_fr')
    leftMotor2 = sim.getObject(player + '/car_joint_bl')
    rightMotor2 = sim.getObject(player + '/car_joint_br')
    sim.setJointTargetVelocity(leftMotor1, lfwV)
    sim.setJointTargetVelocity(rightMotor1, rfwV)
    sim.setJointTargetVelocity(leftMotor2, lbwV)
    sim.setJointTargetVelocity(rightMotor2, rbwV)
    # 輸入四個變數分別給四個軸速度

def setangel(y):
    ontology = sim.getObject(player)
    angel = [-90 * math.pi / 180, y * math.pi / 180, 0 * math.pi / 180]
    leftMotor = sim.getObject(player + '/car_joint_fl')
    rightMotor = sim.getObject(player + '/car_joint_fr')
    sim.setObjectOrientation(leftMotor, ontology, angel)
    sim.setObjectOrientation(rightMotor, ontology, angel)
    # 輸入一個變數改變前輪方向

def controlangel(y):
    if keyboard.is_pressed('a'):
        setangel(-y)
    elif keyboard.is_pressed('d'):
        setangel(y)
    else:
        setangel(0)

def turnover():
    floor = sim.getObject('/Floor')
    player1 = sim.getObject(player)
    a = sim.getObjectOrientation(player1, floor)
    b = sim.getObjectPosition(player1, floor)
    a[0] = 0
    a[1] = 0
    b[2] = 0.3
    sim.setObjectPosition(player1, floor, b)
    sim.setObjectOrientation(player1, floor, a)

def playercontrol(x, y):
    if keyboard.is_pressed('w'):
        setVelocity(-x, -x, -x, -x)  # 調整前進方向
        controlangel(y)
    elif keyboard.is_pressed('s'):
        setVelocity(x, x, x, x)  # 調整後退方向
        controlangel(y)
    elif keyboard.is_pressed('a'):
        setVelocity(-x, x, -x, x)
    elif keyboard.is_pressed('d'):
        setVelocity(x, -x, x, -x)
    elif keyboard.is_pressed('space'):
        turnover()
    elif keyboard.is_pressed('q'):
        # stop simulation
        sim.stopSimulation()
    else:
        setVelocity(0, 0, 0, 0)
        setangel(0)

def shoot():
    # 控制手臂投籃
    armJoint = sim.getObject(player + '/car_joint_m')
    throwJoint = sim.getObject(player + '/car_joint_t')
    baseJoint = sim.getObject(player + '/car_joint_b')
    
    # 設置手臂和投擲機構的初始位置
    sim.setJointTargetPosition(armJoint, 0)
    sim.setJointTargetPosition(throwJoint, 0)
    sim.setJointTargetPosition(baseJoint, 0)
    
    # 模擬投籃動作
    sim.setJointTargetPosition(armJoint, math.pi / 4)  # 手臂抬起
    sim.wait(0.5)  # 等待手臂抬起
    sim.setJointTargetPosition(throwJoint, math.pi / 2)  # 投擲動作
    sim.wait(0.5)  # 等待投擲完成
    sim.setJointTargetPosition(throwJoint, 0)  # 恢復投擲機構
    sim.setJointTargetPosition(armJoint, 0)  # 恢復手臂
    sim.setJointTargetPosition(baseJoint, 0)  # 恢復基座

while True:
    if keyboard.is_pressed('shift'):
        playercontrol(v + 4, a - 20)
    else:
        playercontrol(v, a)
    
    if keyboard.is_pressed('space'):
        shoot()  # 按下空白鍵進行投籃